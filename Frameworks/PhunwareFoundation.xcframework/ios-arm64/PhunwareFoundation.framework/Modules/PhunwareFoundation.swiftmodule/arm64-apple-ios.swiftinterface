// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PhunwareFoundation
import Foundation
@_exported import PhunwareFoundation
import Swift
import UIKit
import UIKit.UINavigationController
import _Concurrency
public protocol StoryboardInitializable {
  static var storyboardName: String { get }
  static var storyboardBundle: Bundle? { get }
  static var storyboardIdentifier: String { get }
  static func makeFromStoryboard() -> Self
}
extension StoryboardInitializable {
  public static var storyboardBundle: Bundle? {
    get
  }
  public static var storyboardIdentifier: String {
    get
  }
  public static func makeFromStoryboard() -> Self
}
extension NSObjectProtocol where Self : ObjectiveC.NSObject {
  public func observe<Value>(_ keyPath: KeyPath<Self, Value>, onChange: @escaping (Value) -> ()) -> NSKeyValueObservation
  public func bind<Value, Target>(_ sourceKeyPath: KeyPath<Self, Value>, to target: Target, at targetKeyPath: ReferenceWritableKeyPath<Target, Value>) -> NSKeyValueObservation
}
public protocol Coordinator : AnyObject {
  var childCoordinators: [Coordinator] { get set }
  var navigationController: UINavigationController { get set }
  func start()
}
extension Coordinator {
  public func removeChildCoordinator(_ child: Coordinator)
}
